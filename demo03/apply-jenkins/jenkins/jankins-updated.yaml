apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jenkins
  name: jenkins
  namespace: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      securityContext:
        fsGroup: 1000 
        runAsUser: 0
      # initContainers:
      # - name: install-docker
      #   image: docker:stable
      #   command: ["cp", "/usr/local/bin/docker", "/data/docker"]    
      #   volumeMounts:
      #   - name: docker
      #     mountPath: "/data"
      # - name: install-kubectl
      #   image: eslamkarim/jenkins-ansible-kubectl
      #   command: ["cp", "/usr/local/bin/kubectl", "/data/kubectl"]    
      #   volumeMounts:
      #   - name: kubectl
      #     mountPath: "/data" 
      containers:
      - image: jenkins/jenkins:lts-jdk11
        imagePullPolicy: Always
        name: jenkins
        env:
          - name: JAVA_ARGS
            value: "-Xmx4g -Xms2g"            
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 50000
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /login
            port: 8080
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 2
          timeoutSeconds: 5
        resources: {}
        volumeMounts:
        - mountPath: /var/run
          name: docker-sock
        - name: data-disk
          mountPath: /var/jenkins_home
        # - name: docker
        #   subPath: "docker"
        #   mountPath: "/usr/local/bin/docker"
        # - name: kubectl
        #   subPath: "kubectl"
        #   mountPath: "/usr/local/bin/kubectl"
      volumes:
      - hostPath:
          path: /var/run
          type: ""
        name: docker-sock
      - name: data-disk
        persistentVolumeClaim:
          claimName: claim-jenkins
      # - name: docker
      #   emptyDir: {}
      # - name: kubectl
      #   emptyDir: {}